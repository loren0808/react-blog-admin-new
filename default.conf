# server {
#     listen 80;
#     server_name localhost;
#     root /etc/nginx/html;
#     try_files $uri $uri/ /index.html =404; # 解决只能访问/ 直接访问其他路由会404
    
#     #开启gzip
#     gzip  on;  
#     #低于1kb的资源不压缩 
#     gzip_min_length 1k;
#     #压缩级别1-9，越大压缩率越高，同时消耗cpu资源也越多，建议设置在5左右。 
#     gzip_comp_level 5; 
#     #需要压缩哪些响应类型的资源，多个空格隔开。不建议压缩图片.
#     gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;  
#     #配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）
#     gzip_disable "MSIE [1-6]\.";  
#     #是否添加“Vary: Accept-Encoding”响应头
#     gzip_vary on;

#     location /api {
#       proxy_pass http://backend:4000;
#     }
# } 

server {
    listen 80;
    server_name yelan.cloud;
    return 301 https://$host$request_uri; 
} 
server {
    listen  443 ssl;
	  server_name  yelan.cloud; 
    try_files $uri $uri/ /index.html =404; # 解决只能访问/ 直接访问其他路由会404

    #开启gzip
    gzip  on;  
    #低于1kb的资源不压缩 
    gzip_min_length 1k;
    #压缩级别1-9，越大压缩率越高，同时消耗cpu资源也越多，建议设置在5左右。 
    gzip_comp_level 5; 
    #需要压缩哪些响应类型的资源，多个空格隔开。不建议压缩图片.
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;  
    #配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）
    gzip_disable "MSIE [1-6]\.";  
    #是否添加“Vary: Accept-Encoding”响应头
    gzip_vary on;

	  #证书文件名称
    ssl_certificate_key /etc/nginx/ssl/cert.key;
    #私钥文件名称 .crt和.pem都可以用
    ssl_certificate /etc/nginx/ssl/cert.pem; 
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
    ssl_prefer_server_ciphers on;

    root         /etc/nginx/html;

    location /api {
      proxy_pass http://backend:4000;
    }
}
